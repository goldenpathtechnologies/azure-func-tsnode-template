{
  "name": "azure-func-tsnode-template",
  "version": "1.0.0",
  "description": "Boilerplate code to expedite the development of Azure Function Apps with Node and TypeScript",
  "author": {
    "name": "Daryl G. Wright",
    "email": "daryl@goldenpath.ca",
    "url": "https://github.com/goldenpathtechnologies"
  },
  "license": "MIT",
  "private": true,
  "scripts": {
    "build": "npm run clean && tsc --project tsconfig.build.json",
    "watch": "npm run clean && tsc -w --project tsconfig.build.json",
    "prestart": "npm run build",
    "start": "func start",
    "develop": "az login && func start",
    "test": "jest --testRegex \"\\.test\\.ts$\" --passWithNoTests",
    "test-e2e": "jest --testRegex \"\\.e2e-test\\.ts$\" --passWithNoTests",
    "clean": "rimraf ./dist",
    "format": "eslint . --fix --ext ts",
    "lint": "eslint . --ext ts",
    "type-check": "tsc --pretty --noEmit"
  },
  "dependencies": {},
  "devDependencies": {
    "@azure/functions": "^3.0.0",
    "@jest/globals": "^29.7.0",
    "@types/jest": "^29.5.6",
    "@types/node": "18.x",
    "@typescript-eslint/eslint-plugin": "^6.8.0",
    "@typescript-eslint/parser": "^6.8.0",
    "azure-functions-core-tools": "^4.x",
    "eslint": "^8.52.0",
    "eslint-plugin-import": "^2.28.1",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.1.0",
    "eslint-plugin-import-quotes": "^0.0.1",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "jest": "^29.7.0",
    "prettier": "^3.0.3",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.2.2"
  },
  "repository": {
    "url": "https://github.com/goldenpathtechnologies/azure-func-tsnode-template.git",
    "type": "git"
  },
  "release": {
    "branches": [
      "main"
    ],
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/exec",
      "@semantic-release/git"
    ],
    "preset": "conventionalcommits",
    "parserOpts": {
      "noteKeywords": [
        "BREAKING CHANGE",
        "BREAKING CHANGES",
        "BREAKING"
      ]
    },
    "writerOpts": {
      "commitsSort": [
        "subject",
        "scope"
      ]
    },
    "prepareCmd": "npx genversion --semi --double --es6 version.ts",
    "assets": [
      "package.json",
      "CHANGELOG.md",
      "version.ts"
    ],
    "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
  }
}
